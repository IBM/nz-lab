{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Netezza Performance Server Lab In this lab will explore the IBM Netezza Performance Server.","title":"Netezza Performance Server Lab"},{"location":"#netezza-performance-server-lab","text":"In this lab will explore the IBM Netezza Performance Server.","title":"Netezza Performance Server Lab"},{"location":"nz-01-cli/","text":"Command Line Interface Introduction In this lab will explore the IBM Netezza Performance Server command line (CLI). The CLI will be our primary interface to execute the labs in the workshop. NPS and Tricks on Using the Netezza Performance Server Virtual Machines The Netezza Performance Server is designed and fine-tuned for specific Cloud Pak for Data System hardware or Netezza Performance Service server on Cloud. In order to demonstrate the system in a virtualized environment, some adaptations were made on the virtual machines. To ensure the labs run smoothly, we have listed some pointers for using the VMs: After pausing the virtual machines, nz services need to be restarted. In the case that the VMs were paused (the host operating system went into sleep or hibernation modes, the images were paused in VMware Workstation,,, etc). To continue using the VMs, run the following commands in the prompt of the Host image. nzstop nzstart Lab Environment The lab system will be a virtual machine running on Virtual Box. Please see the document on how to install the NPS Virtual Machine for your workstation (Windows or Mac OS). Connect to the Netezza Performance Server Use the following information on how to connect to the lab system. There are two options to access the command line: Login to the VM directly and use the terminal application available inside the VM. Local terminal application on your workstation. Login to NPS Command Line using the Virtual Machine GUI After getting the VM running (see the document on how to install the VM) login as follows: Login as the nz user by clicking in the VM and select the nz user: At the password prompt enter : nz and click Sign In Once you are signed in you can right-click the desktop and select \"Open Terminal\" Start NPS if not already started as follows: nzstate nzstart nzstate You are now ready to proceed to the next section of the lab. Login to NPS Command Line for Mac Users From your Mac OSX system, open the terminal application (or another terminal application like iTerm2). Open the Terminal.app. Type command + spacebar. Type \"Terminal.app\" in the Spotlight Search window. Double click \"Terminal.app\" to launch the Terminal application. From the Terminal application ssh into the NPS VM with the nz (password:nz) ID and start NPS if not already started. ssh nz@192.168.9.2 nzstate nzstart nzstate The remainder of the lab will use the command line as the nz user. Login to NPS Command Line for Windows Users Start a Windows PowerShell, press the Windows Key and type powersh in the Search Bar. Click \"Windows PowerShell\" From the PowerShell application ssh into the NPS VM with the nz ID and start NPS if not already started. ssh nz@192.168.9.2 nzstate If system offline: nzstart nzstate The remainder of the lab will use the command line as the nz user. Lab Setup This lab uses an initial setup script to make sure the correct users and databases exist for the remainder of the lab. Follow the instructions below to run the setup script. Login to NPS Command Line using one of these two methods. Login to the VM directly and use the terminal application available inside the VM. Connect to your Netezza Performance Server image using a terminal application (Windows PowerShell, PuTTY, Mac OSX Terminal) If you are continuing from the previous lab and are already connected to nzsql, quit the nzsql console with the \\q command. Prepare for this lab by running the setup script. To do this use the following commands: cd ~/labs/cli/setupLab time ./setupLab.sh Output similar to the following will be produced. ERROR: DROP DATABASE: object LABDB does not exist. CREATE DATABASE ERROR: DROP USER: object LABADMIN does not exist. CREATE USER ALTER USER ALTER DATABASE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE Load session of table 'NATION' completed successfully Load session of table 'REGION' completed successfully Load session of table 'CUSTOMER' completed successfully Load session of table 'SUPPLIER' completed successfully Load session of table 'PART' completed successfully Load session of table 'PARTSUPP' completed successfully Load session of table 'ORDERS' completed successfully Load session of table 'LINEITEM' completed successfully real 1m46.490s user 0m0.082s sys 0m0.784s The error message at the beginning is expected since the database LABDB and user LABADMIN hasn't been created yet. However, the DROP statements are in the setup script in the event the user LABADMIN and database LABDB exist to start this lab new. Dan - Check this text Note: you downloaded and installed the scripts in the lab: \"01-Setup-NPS-Virtual-Machine-Setup-Lab-Guide-Win10-OSX-Final\u201d This lab is now setup and ready to use for the remainder of the sections. Connecting to the System Database The following section details how to connect to the system database which contains all the system views that describes the database objects. Connect to the Netezza System Database Using nzsql Since we have not created any user and databases yet, we will connect to the default database as the default user, with the following credentials: Database: system Username: admin Password: password When issuing the nzsql command, the user supplies the user account, password and the database to connect to using the syntax, below is an example of how this would be done. Do not try to execute that command it is just demonstrating the syntax: nzsql \u2013d [ db_name ] \u2013u [ user ] \u2013pw [ password ] Alternatively, these values can be stored in the command shell and passed to the nzsql command when it is issued without any arguments. Let's verify the current database, user and password values stored in the command shell by issuing the printenv NZ_DATABASE , printenv NZ_USER , and printenv NZ_PASSWORD commands. printenv NZ_DATABASE printenv NZ_USER printenv NZ_PASSWORD The output should look similar to the following: [nz@netezza ~]$ printenv NZ_DATABASE system [nz@netezza ~]$ printenv NZ_USER admin [nz@netezza ~]$ printenv NZ_PASSWORD password Since the current values correspond to our desired values, no modification is required. Next, let's take a look at what options are available to start nzsql. Type in the following command: nzsql -? This is nzsql, the IBM Netezza SQL interactive terminal. Usage: nzsql [options] [security options] [dbname [username] [password]] Security Options: -securityLevel Security Level you wish to request (default: preferredUnSecured) -caCertFile ROOT CA certificate file (default: NULL) Options: -a Echo all input from script -A Unaligned table output mode (-P format=unaligned) -c <query> Run only single query (or slash command) and exit -d <dbname> Specify database name to connect to (default: SYSTEM) -D <dbname> Specify database name to connect to (default: SYSTEM) -schema <schemaname> Specify schema name to connect to (default: $NZ_SCHEMA) -e Echo queries sent to backend -E Display queries that internal commands generate -f <filename> Execute queries from file, then exit -F <string> Set field separator (default: \"|\") (-P fieldsep=) For any binary/control/non-printable character use '$' (e.g., nzsql -F $'\\t' // for TAB) -host <host> Specify database server host (default: localhost.localdomain) -h <host> Specify database server host (default: localhost.localdomain) -H HTML table output mode (-P format=html) -l List available databases, then exit -n Disable readline -o <filename> Send query output to filename (or |pipe) -O <filename> Send query output with errors to filename (or |pipe) -port <port> Specify database server port (default: hardwired) -P var[=arg] Set printing option 'var' to 'arg' (see \\pset command) -q Run quietly (no messages, only query output) -r Suppress row count in query output -R <string> Set record separator (default: newline) (-P recordsep=) -Rev Show version information and exit -rev Show version information and exit -s Single step mode (confirm each query) -S Single line mode (newline terminates query) -t Print rows only (-P tuples_only) -time Print time taken by queries -T text Set HTML table tag options (width, border) (-P tableattr=) -u <username> Specify database username (default: admin) -U <username> Specify database username (default: admin) -v name=val Set nzsqlvariable 'name' to 'value' -V Show version information and exit -w Don't require password, other mechanisms (Kerberos) will supply it -W <password> Specify the database user password -pw <password> Specify the database user password -x Turn on expanded table output (-P expanded) -X Do not read startup file (~/.nzsqlrc) -h or -? or --help Display this help For more information, type \"\\?\" (for internal commands) or \"\\help\" (for SQL commands) from within nzsql. The -? option will list the usage and all options for the nzsql command. In this exercise, we will start nzsql without arguments. In the command prompt, issue the command: nzsql This will bring up the nzsql prompt below that shows a connection to the system database as user admin: [nz@localhost ~]$ nzsql Welcome to nzsql, the IBM Netezza SQL interactive terminal. Type: \\h for help with SQL commands \\? for help on internal slash commands \\g or terminate with semicolon to execute query \\q to quit SYSTEM.ADMIN(ADMIN)=> Commonly Used Commands and SQL Statements There are commonly used commands that start with \"\\\u201d which we will demonstrate in this section. First, we will run the 2 help commands to familiarize ourselves with these handy commands. The \\h command will list the available SQL commands, while the \\? command is used to list the internal slash commands. Examine the output for both commands: \\h \\? From the output of the \\? command, we found the \\l internal command we can use to find out all the databases. Let's find out all the databases by entering \\l : \\l List of databases DATABASE | OWNER ----------+---------- LABDB | LABADMIN SYSTEM | ADMIN (10 rows) Secondly, we will use \\dSv to find out the system views within the system database. Note: there are system tables, however, it isn't recommended to directly access those tables as there can change from release to release and are restricted from the normal user. Input: \\d Sv List of relations Schema | Name | Type | Owner --------------------+---------------------------------------+-------------+------- DEFINITION_SCHEMA | _V_ACL_DATA | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_AGGREGATE | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_ATTRIBUTE | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_ATTRIBUTE2 | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_AUTHENTICATION | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_AUTHENTICATION_SETTINGS | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_GROUP | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_GROUP_HISTORY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_GROUP_MEMBER | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_HISTORY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_TABLE_HISTORY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BLOWER | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BNR_CONNECTOR | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CLASS | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CLASS2 | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CLIENT_COMPATIBILITY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CONNECTION | SYSTEM VIEW | ADMIN --More\u2014 Note: press the space bar to scroll down the result set when you see --More-- on the screen. The list of the system views was truncated in the output above due to the length. Here are the primary views to investigate for DBAs/users new to Netezza: _V_GROUP _V_USER _V_SESSION_V_DATABASE _V_SCHEMA _V_TABLE _V_VIEW _V_ATTRIBUTE _V_SEQUENCE _V_SYNONYM _V_FUNCTION _V_AGGREGATE _V_PROCEDURE From the previous command, we can see that there is a user table called _V_USER . To find out what is stored in that table, we will use the describe command \\d: \\d _V_USER View \"_V_USER\" Attribute | Type | Modifier | Default Value ---------------------+------------------------+----------+--------------- OBJID | OID | NOT NULL | USERNAME | NAME | NOT NULL | OWNER | NAME | | VALIDUNTIL | TIMESTAMP | | CREATEDATE | ABSTIME | NOT NULL | ROWLIMIT | INTEGER | | ACCT_LOCKED | BOOLEAN | | INV_CONN_CNT | SMALLINT | | PWD_INVALID | BOOLEAN | | PWD_LAST_CHGED | DATE | | SESSIONTIMEOUT | INTEGER | | QUERYTIMEOUT | INTEGER | | DEF_PRIORITY | NAME | | MAX_PRIORITY | NAME | | USESYSID | INTEGER | | OBJDELIM | BOOLEAN | NOT NULL | USERESOURCEGRPID | OID | | USERESOURCEGRPNAME | NAME | | CROSS_JOINS_ALLOWED | CHARACTER VARYING(255) | | USEAUTH | CHARACTER VARYING(255) | | PWD_EXPIRY | INTEGER | | View definition: SELECT O.OBJID, O.OBJNAME AS USERNAME, O.\"OWNER\", U.VALUNTIL AS VALIDUNTIL, O.CREATEDATE, U.USERESULTLIMIT AS ROWLIMIT, U.USELOCKED AS ACCT_LOCKED, U.USEINVCONNCNT AS INV_CONN_CNT, U.USEPWDINV AS PWD_INVALID, U.USEPWDCHGED AS PWD_LAST_CHGED, U.USESESSTIMELIMIT AS \"SESSIONTIMEOUT\", U.USEQRYDURATION AS \"QUERYTIMEOUT\", DP.PRILITERAL AS DEF_PRIORITY, MP.PRILITERAL AS MAX_PRIORITY, U.USESYSID, O.OBJDELIM, U.USERESOURCEGRP AS USERESOURCEGRPID, CASE WHEN (O.OBJID = 4900) THEN \"NAME\"(('_ADMIN_'::\"NVARCHAR\")::NVARCHAR(255)) WHEN ((U.USERESOURCEGRP ISNULL) OR (U.USERESOURCEGRP = 4901)) THEN \"NAME\"(('PUBLIC'::\"NVARCHAR\")::NVARCHAR(255)) ELSE G.OBJNAME END AS USERESOURCEGRPNAME, CASE WHEN (U.USECROSSJOIN ISNULL) THEN ('NULL'::\"VARCHAR\")::VARCHAR(255) WHEN (U.USECROSSJOIN = 0) THEN ('NULL'::\"VARCHAR\")::VARCHAR(255) WHEN (U.USECROSSJOIN = 1) THEN ('FALSE'::\"VARCHAR\")::VARCHAR(255) ELSE ('TRUE'::\"VARCHAR\")::VARCHAR(255) END AS CROSS_JOINS_ALLOWED, CASE WHEN (U.USEAUTH = 1) THEN ('LOCAL'::\"VARCHAR\")::VARCHAR(255) ELSE ('DEFAULT'::\"VARCHAR\")::VARCHAR(255) END AS USEAUTH, U.USEPASSWDEXPIRY AS PWD_EXPIRY FROM ((((DEFINITION_SCHEMA.\"_V_OBJ_USER\" O JOIN DEFINITION_SCHEMA.\"_T_USER\" U ON ((O.OBJID = U.OID))) LEFT JOIN DEFINITION_SCHEMA.\"_T_PRIORITY\" DP ON ((U.USEDEFPRIORITY = DP.PRICODE))) LEFT JOIN DEFINITION_SCHEMA.\"_T_PRIORITY\" MP ON ((U.USEMAXPRIORITY = MP.PRICODE))) LEFT JOIN DEFINITION_SCHEMA.\"_V_OBJ_GROUP\" G ON ((U.USERESOURCEGRP = G.OBJID))); This will return all the columns of the _V_USER system table. Next, we want to know the existing users stored in the table. In case too many rows are returned at once, we will first calculate the number of rows it contains by enter the following query: SELECT COUNT ( * ) FROM ( SELECT * FROM _V_USER ) AS \"Wrapper\" ; COUNT ------- 2 (1 row) The query above is essentially the same as SELECT COUNT (*) FROM _V_USER , we have demonstrated the sub-select syntax in case there is a complex query that needed to have the result set evaluated. The result should show there is currently 2 entries in the user table. We can enter the following query to list the user names: select objid, username, owner, createdate, useauth, pwd_expiry from _v_user ; OBJID | USERNAME | OWNER | CREATEDATE | USEAUTH | PWD_EXPIRY --------+----------+-------+---------------------+---------+------------ 4900 | ADMIN | ADMIN | 2020-01-24 08:26:22 | DEFAULT | 0 210500 | LABADMIN | ADMIN | 2020-05-11 07:58:31 | DEFAULT | 0 Exit nzsql To exit nzsql, use the command \\q to return to the Netezza Performance Server system. \\q nzsql Command The nzsql command invokes a SQL command interpreter on the IBM\u00ae Netezza\u00ae host or on an IBM Netezza client system. You can use this SQL command interpreter to create database objects, run queries, and manage the database. To run the nzsql command, enter: nzsql [ options ] [ security options ] [ dbname [ user ] [ password ]] The following table describes the nzsql command parameters. You will be using the nzsql command line tool throughout the labs.","title":"Command Line Interface"},{"location":"nz-01-cli/#command-line-interface","text":"","title":"Command Line Interface"},{"location":"nz-01-cli/#introduction","text":"In this lab will explore the IBM Netezza Performance Server command line (CLI). The CLI will be our primary interface to execute the labs in the workshop.","title":"Introduction"},{"location":"nz-01-cli/#nps-and-tricks-on-using-the-netezza-performance-server-virtual-machines","text":"The Netezza Performance Server is designed and fine-tuned for specific Cloud Pak for Data System hardware or Netezza Performance Service server on Cloud. In order to demonstrate the system in a virtualized environment, some adaptations were made on the virtual machines. To ensure the labs run smoothly, we have listed some pointers for using the VMs: After pausing the virtual machines, nz services need to be restarted. In the case that the VMs were paused (the host operating system went into sleep or hibernation modes, the images were paused in VMware Workstation,,, etc). To continue using the VMs, run the following commands in the prompt of the Host image. nzstop nzstart","title":"NPS and Tricks on Using the Netezza Performance Server Virtual Machines"},{"location":"nz-01-cli/#lab-environment","text":"The lab system will be a virtual machine running on Virtual Box. Please see the document on how to install the NPS Virtual Machine for your workstation (Windows or Mac OS).","title":"Lab Environment"},{"location":"nz-01-cli/#connect-to-the-netezza-performance-server","text":"Use the following information on how to connect to the lab system. There are two options to access the command line: Login to the VM directly and use the terminal application available inside the VM. Local terminal application on your workstation.","title":"Connect to the Netezza Performance Server"},{"location":"nz-01-cli/#login-to-nps-command-line-using-the-virtual-machine-gui","text":"After getting the VM running (see the document on how to install the VM) login as follows: Login as the nz user by clicking in the VM and select the nz user: At the password prompt enter : nz and click Sign In Once you are signed in you can right-click the desktop and select \"Open Terminal\" Start NPS if not already started as follows: nzstate nzstart nzstate You are now ready to proceed to the next section of the lab.","title":"Login to NPS Command Line using the Virtual Machine GUI"},{"location":"nz-01-cli/#login-to-nps-command-line-for-mac-users","text":"From your Mac OSX system, open the terminal application (or another terminal application like iTerm2). Open the Terminal.app. Type command + spacebar. Type \"Terminal.app\" in the Spotlight Search window. Double click \"Terminal.app\" to launch the Terminal application. From the Terminal application ssh into the NPS VM with the nz (password:nz) ID and start NPS if not already started. ssh nz@192.168.9.2 nzstate nzstart nzstate The remainder of the lab will use the command line as the nz user.","title":"Login to NPS Command Line for Mac Users"},{"location":"nz-01-cli/#login-to-nps-command-line-for-windows-users","text":"Start a Windows PowerShell, press the Windows Key and type powersh in the Search Bar. Click \"Windows PowerShell\" From the PowerShell application ssh into the NPS VM with the nz ID and start NPS if not already started. ssh nz@192.168.9.2 nzstate If system offline: nzstart nzstate The remainder of the lab will use the command line as the nz user.","title":"Login to NPS Command Line for Windows Users"},{"location":"nz-01-cli/#lab-setup","text":"This lab uses an initial setup script to make sure the correct users and databases exist for the remainder of the lab. Follow the instructions below to run the setup script. Login to NPS Command Line using one of these two methods. Login to the VM directly and use the terminal application available inside the VM. Connect to your Netezza Performance Server image using a terminal application (Windows PowerShell, PuTTY, Mac OSX Terminal) If you are continuing from the previous lab and are already connected to nzsql, quit the nzsql console with the \\q command. Prepare for this lab by running the setup script. To do this use the following commands: cd ~/labs/cli/setupLab time ./setupLab.sh Output similar to the following will be produced. ERROR: DROP DATABASE: object LABDB does not exist. CREATE DATABASE ERROR: DROP USER: object LABADMIN does not exist. CREATE USER ALTER USER ALTER DATABASE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE CREATE TABLE Load session of table 'NATION' completed successfully Load session of table 'REGION' completed successfully Load session of table 'CUSTOMER' completed successfully Load session of table 'SUPPLIER' completed successfully Load session of table 'PART' completed successfully Load session of table 'PARTSUPP' completed successfully Load session of table 'ORDERS' completed successfully Load session of table 'LINEITEM' completed successfully real 1m46.490s user 0m0.082s sys 0m0.784s The error message at the beginning is expected since the database LABDB and user LABADMIN hasn't been created yet. However, the DROP statements are in the setup script in the event the user LABADMIN and database LABDB exist to start this lab new. Dan - Check this text Note: you downloaded and installed the scripts in the lab: \"01-Setup-NPS-Virtual-Machine-Setup-Lab-Guide-Win10-OSX-Final\u201d This lab is now setup and ready to use for the remainder of the sections.","title":"Lab Setup"},{"location":"nz-01-cli/#connecting-to-the-system-database","text":"The following section details how to connect to the system database which contains all the system views that describes the database objects.","title":"Connecting to the System Database"},{"location":"nz-01-cli/#connect-to-the-netezza-system-database-using-nzsql","text":"Since we have not created any user and databases yet, we will connect to the default database as the default user, with the following credentials: Database: system Username: admin Password: password When issuing the nzsql command, the user supplies the user account, password and the database to connect to using the syntax, below is an example of how this would be done. Do not try to execute that command it is just demonstrating the syntax: nzsql \u2013d [ db_name ] \u2013u [ user ] \u2013pw [ password ] Alternatively, these values can be stored in the command shell and passed to the nzsql command when it is issued without any arguments. Let's verify the current database, user and password values stored in the command shell by issuing the printenv NZ_DATABASE , printenv NZ_USER , and printenv NZ_PASSWORD commands. printenv NZ_DATABASE printenv NZ_USER printenv NZ_PASSWORD The output should look similar to the following: [nz@netezza ~]$ printenv NZ_DATABASE system [nz@netezza ~]$ printenv NZ_USER admin [nz@netezza ~]$ printenv NZ_PASSWORD password Since the current values correspond to our desired values, no modification is required. Next, let's take a look at what options are available to start nzsql. Type in the following command: nzsql -? This is nzsql, the IBM Netezza SQL interactive terminal. Usage: nzsql [options] [security options] [dbname [username] [password]] Security Options: -securityLevel Security Level you wish to request (default: preferredUnSecured) -caCertFile ROOT CA certificate file (default: NULL) Options: -a Echo all input from script -A Unaligned table output mode (-P format=unaligned) -c <query> Run only single query (or slash command) and exit -d <dbname> Specify database name to connect to (default: SYSTEM) -D <dbname> Specify database name to connect to (default: SYSTEM) -schema <schemaname> Specify schema name to connect to (default: $NZ_SCHEMA) -e Echo queries sent to backend -E Display queries that internal commands generate -f <filename> Execute queries from file, then exit -F <string> Set field separator (default: \"|\") (-P fieldsep=) For any binary/control/non-printable character use '$' (e.g., nzsql -F $'\\t' // for TAB) -host <host> Specify database server host (default: localhost.localdomain) -h <host> Specify database server host (default: localhost.localdomain) -H HTML table output mode (-P format=html) -l List available databases, then exit -n Disable readline -o <filename> Send query output to filename (or |pipe) -O <filename> Send query output with errors to filename (or |pipe) -port <port> Specify database server port (default: hardwired) -P var[=arg] Set printing option 'var' to 'arg' (see \\pset command) -q Run quietly (no messages, only query output) -r Suppress row count in query output -R <string> Set record separator (default: newline) (-P recordsep=) -Rev Show version information and exit -rev Show version information and exit -s Single step mode (confirm each query) -S Single line mode (newline terminates query) -t Print rows only (-P tuples_only) -time Print time taken by queries -T text Set HTML table tag options (width, border) (-P tableattr=) -u <username> Specify database username (default: admin) -U <username> Specify database username (default: admin) -v name=val Set nzsqlvariable 'name' to 'value' -V Show version information and exit -w Don't require password, other mechanisms (Kerberos) will supply it -W <password> Specify the database user password -pw <password> Specify the database user password -x Turn on expanded table output (-P expanded) -X Do not read startup file (~/.nzsqlrc) -h or -? or --help Display this help For more information, type \"\\?\" (for internal commands) or \"\\help\" (for SQL commands) from within nzsql. The -? option will list the usage and all options for the nzsql command. In this exercise, we will start nzsql without arguments. In the command prompt, issue the command: nzsql This will bring up the nzsql prompt below that shows a connection to the system database as user admin: [nz@localhost ~]$ nzsql Welcome to nzsql, the IBM Netezza SQL interactive terminal. Type: \\h for help with SQL commands \\? for help on internal slash commands \\g or terminate with semicolon to execute query \\q to quit SYSTEM.ADMIN(ADMIN)=>","title":"Connect to the Netezza System Database Using nzsql"},{"location":"nz-01-cli/#commonly-used-commands-and-sql-statements","text":"There are commonly used commands that start with \"\\\u201d which we will demonstrate in this section. First, we will run the 2 help commands to familiarize ourselves with these handy commands. The \\h command will list the available SQL commands, while the \\? command is used to list the internal slash commands. Examine the output for both commands: \\h \\? From the output of the \\? command, we found the \\l internal command we can use to find out all the databases. Let's find out all the databases by entering \\l : \\l List of databases DATABASE | OWNER ----------+---------- LABDB | LABADMIN SYSTEM | ADMIN (10 rows) Secondly, we will use \\dSv to find out the system views within the system database. Note: there are system tables, however, it isn't recommended to directly access those tables as there can change from release to release and are restricted from the normal user. Input: \\d Sv List of relations Schema | Name | Type | Owner --------------------+---------------------------------------+-------------+------- DEFINITION_SCHEMA | _V_ACL_DATA | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_AGGREGATE | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_ATTRIBUTE | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_ATTRIBUTE2 | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_AUTHENTICATION | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_AUTHENTICATION_SETTINGS | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_GROUP | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_GROUP_HISTORY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_GROUP_MEMBER | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_HISTORY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BACKUP_TABLE_HISTORY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BLOWER | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_BNR_CONNECTOR | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CLASS | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CLASS2 | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CLIENT_COMPATIBILITY | SYSTEM VIEW | ADMIN DEFINITION_SCHEMA | _V_CONNECTION | SYSTEM VIEW | ADMIN --More\u2014 Note: press the space bar to scroll down the result set when you see --More-- on the screen. The list of the system views was truncated in the output above due to the length. Here are the primary views to investigate for DBAs/users new to Netezza: _V_GROUP _V_USER _V_SESSION_V_DATABASE _V_SCHEMA _V_TABLE _V_VIEW _V_ATTRIBUTE _V_SEQUENCE _V_SYNONYM _V_FUNCTION _V_AGGREGATE _V_PROCEDURE From the previous command, we can see that there is a user table called _V_USER . To find out what is stored in that table, we will use the describe command \\d: \\d _V_USER View \"_V_USER\" Attribute | Type | Modifier | Default Value ---------------------+------------------------+----------+--------------- OBJID | OID | NOT NULL | USERNAME | NAME | NOT NULL | OWNER | NAME | | VALIDUNTIL | TIMESTAMP | | CREATEDATE | ABSTIME | NOT NULL | ROWLIMIT | INTEGER | | ACCT_LOCKED | BOOLEAN | | INV_CONN_CNT | SMALLINT | | PWD_INVALID | BOOLEAN | | PWD_LAST_CHGED | DATE | | SESSIONTIMEOUT | INTEGER | | QUERYTIMEOUT | INTEGER | | DEF_PRIORITY | NAME | | MAX_PRIORITY | NAME | | USESYSID | INTEGER | | OBJDELIM | BOOLEAN | NOT NULL | USERESOURCEGRPID | OID | | USERESOURCEGRPNAME | NAME | | CROSS_JOINS_ALLOWED | CHARACTER VARYING(255) | | USEAUTH | CHARACTER VARYING(255) | | PWD_EXPIRY | INTEGER | | View definition: SELECT O.OBJID, O.OBJNAME AS USERNAME, O.\"OWNER\", U.VALUNTIL AS VALIDUNTIL, O.CREATEDATE, U.USERESULTLIMIT AS ROWLIMIT, U.USELOCKED AS ACCT_LOCKED, U.USEINVCONNCNT AS INV_CONN_CNT, U.USEPWDINV AS PWD_INVALID, U.USEPWDCHGED AS PWD_LAST_CHGED, U.USESESSTIMELIMIT AS \"SESSIONTIMEOUT\", U.USEQRYDURATION AS \"QUERYTIMEOUT\", DP.PRILITERAL AS DEF_PRIORITY, MP.PRILITERAL AS MAX_PRIORITY, U.USESYSID, O.OBJDELIM, U.USERESOURCEGRP AS USERESOURCEGRPID, CASE WHEN (O.OBJID = 4900) THEN \"NAME\"(('_ADMIN_'::\"NVARCHAR\")::NVARCHAR(255)) WHEN ((U.USERESOURCEGRP ISNULL) OR (U.USERESOURCEGRP = 4901)) THEN \"NAME\"(('PUBLIC'::\"NVARCHAR\")::NVARCHAR(255)) ELSE G.OBJNAME END AS USERESOURCEGRPNAME, CASE WHEN (U.USECROSSJOIN ISNULL) THEN ('NULL'::\"VARCHAR\")::VARCHAR(255) WHEN (U.USECROSSJOIN = 0) THEN ('NULL'::\"VARCHAR\")::VARCHAR(255) WHEN (U.USECROSSJOIN = 1) THEN ('FALSE'::\"VARCHAR\")::VARCHAR(255) ELSE ('TRUE'::\"VARCHAR\")::VARCHAR(255) END AS CROSS_JOINS_ALLOWED, CASE WHEN (U.USEAUTH = 1) THEN ('LOCAL'::\"VARCHAR\")::VARCHAR(255) ELSE ('DEFAULT'::\"VARCHAR\")::VARCHAR(255) END AS USEAUTH, U.USEPASSWDEXPIRY AS PWD_EXPIRY FROM ((((DEFINITION_SCHEMA.\"_V_OBJ_USER\" O JOIN DEFINITION_SCHEMA.\"_T_USER\" U ON ((O.OBJID = U.OID))) LEFT JOIN DEFINITION_SCHEMA.\"_T_PRIORITY\" DP ON ((U.USEDEFPRIORITY = DP.PRICODE))) LEFT JOIN DEFINITION_SCHEMA.\"_T_PRIORITY\" MP ON ((U.USEMAXPRIORITY = MP.PRICODE))) LEFT JOIN DEFINITION_SCHEMA.\"_V_OBJ_GROUP\" G ON ((U.USERESOURCEGRP = G.OBJID))); This will return all the columns of the _V_USER system table. Next, we want to know the existing users stored in the table. In case too many rows are returned at once, we will first calculate the number of rows it contains by enter the following query: SELECT COUNT ( * ) FROM ( SELECT * FROM _V_USER ) AS \"Wrapper\" ; COUNT ------- 2 (1 row) The query above is essentially the same as SELECT COUNT (*) FROM _V_USER , we have demonstrated the sub-select syntax in case there is a complex query that needed to have the result set evaluated. The result should show there is currently 2 entries in the user table. We can enter the following query to list the user names: select objid, username, owner, createdate, useauth, pwd_expiry from _v_user ; OBJID | USERNAME | OWNER | CREATEDATE | USEAUTH | PWD_EXPIRY --------+----------+-------+---------------------+---------+------------ 4900 | ADMIN | ADMIN | 2020-01-24 08:26:22 | DEFAULT | 0 210500 | LABADMIN | ADMIN | 2020-05-11 07:58:31 | DEFAULT | 0","title":"Commonly Used Commands and SQL Statements"},{"location":"nz-01-cli/#exit-nzsql","text":"To exit nzsql, use the command \\q to return to the Netezza Performance Server system. \\q","title":"Exit nzsql"},{"location":"nz-01-cli/#nzsql-command","text":"The nzsql command invokes a SQL command interpreter on the IBM\u00ae Netezza\u00ae host or on an IBM Netezza client system. You can use this SQL command interpreter to create database objects, run queries, and manage the database. To run the nzsql command, enter: nzsql [ options ] [ security options ] [ dbname [ user ] [ password ]] The following table describes the nzsql command parameters. You will be using the nzsql command line tool throughout the labs.","title":"nzsql Command"},{"location":"nz-acknowledgements/","text":"Acknowledgments We would like to thank all the development team for helping to deliver this release given the tremendous deadlines and constraints that they have been under. The initial lab was created by Deepak Rangarao with contributions from development. Additional material was supplied by Daniel Hancock and feedback from the members of the watsonx.data activation community. Formatting and script development was done by George Baklarz. The contents of this eBook are the result of a lot of research and testing based on the contents of watsonx.data. Results are based on a specific version of watsonx.data, so you may have different results if using an older or newer version of the development kit. Support For any questions regarding the lab, including any suggestions, general comments, or bug reports, please contact: George Baklarz baklarz@ca.ibm.com Daniel Hancock daniel.hancock@us.ibm.com We would also appreciate any feedback on the successful use of the lab. Thanks for using watsonx.data! Dan, Deepak & George","title":"Acknowledgements"},{"location":"nz-acknowledgements/#acknowledgments","text":"We would like to thank all the development team for helping to deliver this release given the tremendous deadlines and constraints that they have been under. The initial lab was created by Deepak Rangarao with contributions from development. Additional material was supplied by Daniel Hancock and feedback from the members of the watsonx.data activation community. Formatting and script development was done by George Baklarz. The contents of this eBook are the result of a lot of research and testing based on the contents of watsonx.data. Results are based on a specific version of watsonx.data, so you may have different results if using an older or newer version of the development kit.","title":"Acknowledgments"},{"location":"nz-acknowledgements/#support","text":"For any questions regarding the lab, including any suggestions, general comments, or bug reports, please contact: George Baklarz baklarz@ca.ibm.com Daniel Hancock daniel.hancock@us.ibm.com We would also appreciate any feedback on the successful use of the lab. Thanks for using watsonx.data! Dan, Deepak & George","title":"Support"},{"location":"nz-disclaimer/","text":"Disclaimer Watson.data Copyright \u00a9 2024 by International Business Machines Corporation (IBM). All rights reserved. Printed in Canada. Except as permitted under the Copyright Act of 1976, no part of this publication may be reproduced or distributed in any form or by any means, or stored in a database or retrieval system, without the prior written permission of IBM, with the exception that the program listings may be entered, stored, and executed in a computer system, but they may not be reproduced for publication. The contents of this lab represent those features that may or may not be available in the current release of any products mentioned within this lab despite what the lab may say. IBM reserves the right to include or exclude any functionality mentioned in this lab for the current release of watsonx.data, or a subsequent release. In addition, any claims made in this lab are not official communications by IBM; rather, they are observed by the authors in unaudited testing and research. The views expressed in this lab is those of the authors and not necessarily those of the IBM Corporation; both are not liable for any of the claims, assertions, or contents in this lab. IBM's statements regarding its plans, directions, and intent are subject to change or withdrawal without notice and at IBM's sole discretion. Information regarding potential future products is intended to outline our general product direction and it should not be relied on in making a purchasing decision. The information mentioned regarding potential future products is not a commitment, promise, or legal obligation to deliver any material, code, or functionality. Information about potential future products may not be incorporated into any contract. The development, release, and timing of any future feature or functionality described for our products remains at our sole discretion. Performance is based on measurements and projections using standard IBM benchmarks in a controlled environment. The actual throughput or performance that any user will experience will vary depending upon many factors, including considerations such as the amount of multiprogramming in the user's job stream, the I/O configuration, the storage configuration, and the workload processed. Therefore, no assurance can be given that an individual user will achieve results like those stated here. U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM. Information in this eBook (including information relating to products that have not yet been announced by IBM) has been reviewed for accuracy as of the date of initial publication and could include unintentional technical or typographical errors. IBM shall have no responsibility to update this information. THIS DOCUMENT IS DISTRIBUTED \"AS IS\" WITHOUT ANY WARRANTY, EITHER EXPRESS OR IMPLIED. IN NO EVENT SHALL IBM BE LIABLE FOR ANY DAMAGE ARISING FROM THE USE OF THIS INFORMATION, INCLUDING BUT NOT LIMITED TO, LOSS OF DATA, BUSINESS INTERRUPTION, LOSS OF PROFIT OR LOSS OF OPPORTUNITY. IBM products and services are warranted according to the terms and conditions of the agreements under which they are provided. References in this document to IBM products, programs, or services does not imply that IBM intends to make such products, programs, or services available in all countries in which IBM operates or does business. Information concerning non-IBM products was obtained from the suppliers of those products, their published announcements, or other publicly available sources. IBM has not tested those products in connection with this publication and cannot confirm the accuracy of performance, compatibility or any other claims related to non-IBM products. Questions on the capabilities of non-IBM products should be addressed to the suppliers of those products. IBM does not warrant the quality of any third-party products, or the ability of any such third-party products to interoperate with IBM's products. IBM EXPRESSLY DISCLAIMS ALL WARRANTIES, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. The provision of the information contained herein is not intended to, and does not, grant any right or license under any IBM patents, copyrights, trademarks, or other intellectual property right. IBM, the IBM logo, ibm.com, Aspera\u00ae, Bluemix, Blueworks Live, CICS, Clearcase, Cognos\u00ae, DOORS\u00ae, Emptoris\u00ae, Enterprise Document Management System\u2122, FASP\u00ae, FileNet\u00ae, Global Business Services \u00ae, Global Technology Services \u00ae, IBM ExperienceOne\u2122, IBM SmartCloud\u00ae, IBM Social Business\u00ae, Information on Demand, ILOG, Maximo\u00ae, MQIntegrator\u00ae, MQSeries\u00ae, Netcool\u00ae, OMEGAMON, OpenPower, PureAnalytics\u2122, PureApplication\u00ae, pureCluster\u2122, PureCoverage\u00ae, PureData\u00ae, PureExperience\u00ae, PureFlex\u00ae, pureQuery\u00ae, pureScale\u00ae, PureSystems\u00ae, QRadar\u00ae, Rational\u00ae, Rhapsody\u00ae, Smarter Commerce\u00ae, SoDA, SPSS, Sterling Commerce\u00ae, StoredIQ, Tealeaf\u00ae, Tivoli\u00ae, Trusteer\u00ae, Unica\u00ae, urban{code}\u00ae, Watson, WebSphere\u00ae, Worklight\u00ae, X-Force\u00ae and System z\u00ae Z/OS, are trademarks of International Business Machines Corporation, registered in many jurisdictions worldwide. Other product and service names might be trademarks of IBM or other companies. A current list of IBM trademarks is available on the Web at \"Copyright and trademark information\" at: www.ibm.com/legal/copytrade.shtml. All trademarks or copyrights mentioned herein are the possession of their respective owners and IBM makes no claim of ownership by the mention of products that contain these marks.","title":"Disclaimer"},{"location":"nz-disclaimer/#disclaimer","text":"","title":"Disclaimer"},{"location":"nz-disclaimer/#watsondata","text":"Copyright \u00a9 2024 by International Business Machines Corporation (IBM). All rights reserved. Printed in Canada. Except as permitted under the Copyright Act of 1976, no part of this publication may be reproduced or distributed in any form or by any means, or stored in a database or retrieval system, without the prior written permission of IBM, with the exception that the program listings may be entered, stored, and executed in a computer system, but they may not be reproduced for publication. The contents of this lab represent those features that may or may not be available in the current release of any products mentioned within this lab despite what the lab may say. IBM reserves the right to include or exclude any functionality mentioned in this lab for the current release of watsonx.data, or a subsequent release. In addition, any claims made in this lab are not official communications by IBM; rather, they are observed by the authors in unaudited testing and research. The views expressed in this lab is those of the authors and not necessarily those of the IBM Corporation; both are not liable for any of the claims, assertions, or contents in this lab. IBM's statements regarding its plans, directions, and intent are subject to change or withdrawal without notice and at IBM's sole discretion. Information regarding potential future products is intended to outline our general product direction and it should not be relied on in making a purchasing decision. The information mentioned regarding potential future products is not a commitment, promise, or legal obligation to deliver any material, code, or functionality. Information about potential future products may not be incorporated into any contract. The development, release, and timing of any future feature or functionality described for our products remains at our sole discretion. Performance is based on measurements and projections using standard IBM benchmarks in a controlled environment. The actual throughput or performance that any user will experience will vary depending upon many factors, including considerations such as the amount of multiprogramming in the user's job stream, the I/O configuration, the storage configuration, and the workload processed. Therefore, no assurance can be given that an individual user will achieve results like those stated here. U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM. Information in this eBook (including information relating to products that have not yet been announced by IBM) has been reviewed for accuracy as of the date of initial publication and could include unintentional technical or typographical errors. IBM shall have no responsibility to update this information. THIS DOCUMENT IS DISTRIBUTED \"AS IS\" WITHOUT ANY WARRANTY, EITHER EXPRESS OR IMPLIED. IN NO EVENT SHALL IBM BE LIABLE FOR ANY DAMAGE ARISING FROM THE USE OF THIS INFORMATION, INCLUDING BUT NOT LIMITED TO, LOSS OF DATA, BUSINESS INTERRUPTION, LOSS OF PROFIT OR LOSS OF OPPORTUNITY. IBM products and services are warranted according to the terms and conditions of the agreements under which they are provided. References in this document to IBM products, programs, or services does not imply that IBM intends to make such products, programs, or services available in all countries in which IBM operates or does business. Information concerning non-IBM products was obtained from the suppliers of those products, their published announcements, or other publicly available sources. IBM has not tested those products in connection with this publication and cannot confirm the accuracy of performance, compatibility or any other claims related to non-IBM products. Questions on the capabilities of non-IBM products should be addressed to the suppliers of those products. IBM does not warrant the quality of any third-party products, or the ability of any such third-party products to interoperate with IBM's products. IBM EXPRESSLY DISCLAIMS ALL WARRANTIES, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. The provision of the information contained herein is not intended to, and does not, grant any right or license under any IBM patents, copyrights, trademarks, or other intellectual property right. IBM, the IBM logo, ibm.com, Aspera\u00ae, Bluemix, Blueworks Live, CICS, Clearcase, Cognos\u00ae, DOORS\u00ae, Emptoris\u00ae, Enterprise Document Management System\u2122, FASP\u00ae, FileNet\u00ae, Global Business Services \u00ae, Global Technology Services \u00ae, IBM ExperienceOne\u2122, IBM SmartCloud\u00ae, IBM Social Business\u00ae, Information on Demand, ILOG, Maximo\u00ae, MQIntegrator\u00ae, MQSeries\u00ae, Netcool\u00ae, OMEGAMON, OpenPower, PureAnalytics\u2122, PureApplication\u00ae, pureCluster\u2122, PureCoverage\u00ae, PureData\u00ae, PureExperience\u00ae, PureFlex\u00ae, pureQuery\u00ae, pureScale\u00ae, PureSystems\u00ae, QRadar\u00ae, Rational\u00ae, Rhapsody\u00ae, Smarter Commerce\u00ae, SoDA, SPSS, Sterling Commerce\u00ae, StoredIQ, Tealeaf\u00ae, Tivoli\u00ae, Trusteer\u00ae, Unica\u00ae, urban{code}\u00ae, Watson, WebSphere\u00ae, Worklight\u00ae, X-Force\u00ae and System z\u00ae Z/OS, are trademarks of International Business Machines Corporation, registered in many jurisdictions worldwide. Other product and service names might be trademarks of IBM or other companies. A current list of IBM trademarks is available on the Web at \"Copyright and trademark information\" at: www.ibm.com/legal/copytrade.shtml. All trademarks or copyrights mentioned herein are the possession of their respective owners and IBM makes no claim of ownership by the mention of products that contain these marks.","title":"Watson.data"},{"location":"nz-lab-instructions/","text":"Lab Instructions Lab instructions may contain three types of information: Screen (UI) interactions Text commands Dialog Close Keyboard or Mouse Action When a keyboard or mouse action is required, the text will include a box with the instructions. Select the Infrastructure Icon in the watsonx.data UI Command Text Any text that needs to be typed into the system will be outlined in a grey box. Enter this text into the SQL window and Run the code SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; A copy icon is usually found on the far right-hand side of the command box. Use this to copy the text and paste it into your dialog or command window. You can also select the text and copy it that way. Once you have copied the text, paste the value into the appropriate dialog using the paste command or menu. Cut and Paste Considerations Some commands may span multiple lines, so make sure you copy everything in the box if you are not using the copy button. Commands pasted into a terminal window will require that you hit the Return or Enter key for the command to be executed. Commands pasted into a Presto CLI window will execute automatically. Dialog Close There are instructions that will tell you to close the current dialog. Close the dialog by pressing the [x] in the corner In many cases you will also be able to use the Escape key to close the current window. Icon Reference There are certain menu icons that are referred to throughout the lab that have specific names: Hamburger menu \u2261 This icon is used to display menu items that a user would select from. Kebab menu \u22ee This icon is usually used to indicate that there are specific actions that can be performed against an object. Twisty \u25ba and \u25bc Used to expand and collapse lists. URL Conventions Your TechZone reservation contains a number of URLs for the services provided in the watsonx.data server. The URL will contain the name of the server and the corresponding port number for the service. Throughout the documentation, the server name will be referred to as region.services.cloud.techzone.ibm.com and port number is referred to as port . Where you see these URLs, replace them with the values found in your reservation.","title":"Lab Instructions"},{"location":"nz-lab-instructions/#lab-instructions","text":"Lab instructions may contain three types of information: Screen (UI) interactions Text commands Dialog Close","title":"Lab Instructions"},{"location":"nz-lab-instructions/#keyboard-or-mouse-action","text":"When a keyboard or mouse action is required, the text will include a box with the instructions. Select the Infrastructure Icon in the watsonx.data UI","title":"Keyboard or Mouse Action"},{"location":"nz-lab-instructions/#command-text","text":"Any text that needs to be typed into the system will be outlined in a grey box. Enter this text into the SQL window and Run the code SELECT * FROM \"hive_data\".\"ontime\".\"ontime\" LIMIT 10; A copy icon is usually found on the far right-hand side of the command box. Use this to copy the text and paste it into your dialog or command window. You can also select the text and copy it that way. Once you have copied the text, paste the value into the appropriate dialog using the paste command or menu. Cut and Paste Considerations Some commands may span multiple lines, so make sure you copy everything in the box if you are not using the copy button. Commands pasted into a terminal window will require that you hit the Return or Enter key for the command to be executed. Commands pasted into a Presto CLI window will execute automatically.","title":"Command Text"},{"location":"nz-lab-instructions/#dialog-close","text":"There are instructions that will tell you to close the current dialog. Close the dialog by pressing the [x] in the corner In many cases you will also be able to use the Escape key to close the current window.","title":"Dialog Close"},{"location":"nz-lab-instructions/#icon-reference","text":"There are certain menu icons that are referred to throughout the lab that have specific names: Hamburger menu \u2261 This icon is used to display menu items that a user would select from. Kebab menu \u22ee This icon is usually used to indicate that there are specific actions that can be performed against an object. Twisty \u25ba and \u25bc Used to expand and collapse lists.","title":"Icon Reference"},{"location":"nz-lab-instructions/#url-conventions","text":"Your TechZone reservation contains a number of URLs for the services provided in the watsonx.data server. The URL will contain the name of the server and the corresponding port number for the service. Throughout the documentation, the server name will be referred to as region.services.cloud.techzone.ibm.com and port number is referred to as port . Where you see these URLs, replace them with the values found in your reservation.","title":"URL Conventions"}]}